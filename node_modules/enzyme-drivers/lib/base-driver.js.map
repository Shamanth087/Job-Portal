{"version":3,"sources":["../src/base-driver.js"],"names":["Enzyme","configure","adapter","Adapter","BaseDriver","path","mocks","isRelativePathFromRoot","rootFolder","targetImport","commonjs","component","Error","_component","props","ComponentModule","require","testId","child","byId","getElement","type","render","console","warn","propsOf","children","el","findWhere","node","prop","state","setState"],"mappings":"gnBAAA,gC;AACA,8B;;;AAGA,6D;AACAA,iBAAOC,SAAP,CAAiB,EAAEC,SAAS,IAAIC,4BAAJ,EAAX,EAAjB,E;;AAEqBC,U;;AAEnB;AACoC,OADvBC,IACuB,QADvBA,IACuB,CADjBC,KACiB,QADjBA,KACiB,8BADVC,sBACU,CADVA,sBACU,yCADe,IACf,gDADqBC,UACrB,CADqBA,UACrB,mCADkC,MAClC,4CAD0CC,YAC1C,CAD0CA,YAC1C,qCADyD,SACzD,qBAAtBC,QAAsB,QAAtBA,QAAsB,CAAZC,SAAY,QAAZA,SAAY;AAClC,QAAI,CAACA,SAAL,EAAgB;AACd,UAAIL,KAAJ,EAAW;AACT,cAAMM,MAAM,sBAAN,CAAN;AACD;AACD,WAAKJ,UAAL,GAAkBA,UAAlB;AACA,WAAKC,YAAL,GAAoBA,YAApB;AACA,WAAKJ,IAAL,GAAYE,uCAAqC,KAAKC,UAA1C,GAAuDH,IAAvD,GAAgEA,IAA5E;AACA,WAAKK,QAAL,GAAgBA,QAAhB;AACD,KARD,MAQO;AACL,WAAKG,UAAL,GAAkBF,SAAlB;AACD;AACF,G;;AAEMG,S,EAAO;AACZ,UAAI,CAAC,KAAKD,UAAV,EAAsB;AACpB,YAAME,kBAAkBC,QAAQ,KAAKX,IAAb,CAAxB;AACA,aAAKQ,UAAL,GAAkB,KAAKH,QAAL,GAAgBK,eAAhB,GAAkCA,gBAAgB,KAAKN,YAArB,CAApD;AACD;AACD,WAAKE,SAAL,GAAiB,qBAAQ,mCAAM,UAAN,EAAqBG,KAArB,CAAR,CAAjB;AACA,aAAO,IAAP;AACD,K;;AAEWG,U,EAAQ;AAClB,UAAMC,QAAQ,KAAKC,IAAL,CAAUF,MAAV,EAAkBG,UAAlB,EAAd;AACA,aAAO,IAAIhB,UAAJ,CAAe,EAACO,WAAWO,MAAMG,IAAlB,EAAf,EAAwCC,MAAxC,CAA+CJ,MAAMJ,KAArD,CAAP;AACD,K;;AAEkBG,U,EAAQ;AACzBM,cAAQC,IAAR,CAAa,uEAAb,EADyB,CAC8D;AACvF,aAAO,KAAKL,IAAL,CAAUF,MAAV,CAAP;AACD,K;;AAEOA,U,EAAQ;AACd,aAAO,KAAKE,IAAL,CAAUF,MAAV,EAAkBH,KAAlB,EAAP;AACD,K;;AAEUG,U,EAAQ;AACjB,aAAO,KAAKQ,OAAL,CAAaR,MAAb,EAAqBS,QAA5B;AACD,K;;AAEIT,U,EAAQ;AACX,UAAMU,KAAK,KAAKhB,SAAL,CAAeiB,SAAf,CAAyB,wBAAQC,KAAKC,IAAL,CAAU,QAAV,MAAwBb,MAAhC,EAAzB,CAAX;AACA,aAAOU,EAAP;AACD,K;;;;;;AAMQI,S,EAAO;AACd,WAAKpB,SAAL,CAAeqB,QAAf,CAAwBD,KAAxB;AACD,K,wCANW,CACV,OAAO,KAAKpB,SAAL,CAAeoB,KAAf,EAAP,CACD,C,6CAnDkB3B,U","file":"base-driver.js","sourcesContent":["import {shallow} from 'enzyme';\nimport React from 'react';\n\nimport Enzyme from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\nEnzyme.configure({ adapter: new Adapter() });\n\nexport default class BaseDriver {\n\n  constructor({path, mocks, isRelativePathFromRoot = true, rootFolder = 'src/', targetImport = 'default',\n                commonjs, component}) {\n    if (!component) {\n      if (mocks) {\n        throw Error(\"mocks are deprecated\")\n      }\n      this.rootFolder = rootFolder;\n      this.targetImport = targetImport;\n      this.path = isRelativePathFromRoot ? `../../../${this.rootFolder}${path}` : path;\n      this.commonjs = commonjs;\n    } else {\n      this._component = component;\n    }\n  }\n\n  render(props) {\n    if (!this._component) {\n      const ComponentModule = require(this.path);\n      this._component = this.commonjs ? ComponentModule : ComponentModule[this.targetImport];\n    }\n    this.component = shallow(<this._component {...props}/>);\n    return this;\n  }\n\n  renderChild(testId) {\n    const child = this.byId(testId).getElement();\n    return new BaseDriver({component: child.type}).render(child.props);\n  }\n\n  getElementByTestId(testId) {\n    console.warn('--- DEPRECATED --- getElementByTestId is deprecated. use byId instead'); // eslint-disable-line\n    return this.byId(testId);\n  }\n\n  propsOf(testId) {\n    return this.byId(testId).props();\n  }\n\n  childrenOf(testId) {\n    return this.propsOf(testId).children;\n  }\n\n  byId(testId) {\n    const el = this.component.findWhere(node => node.prop('testID') === testId);\n    return el;\n  }\n\n  get state() {\n    return this.component.state();\n  }\n\n  setState(state) {\n    this.component.setState(state);\n  }\n\n}\n"]}